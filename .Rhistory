import(sf)
library(sf)
install.packages("sf")
library(sf)
files = list.files("C:\\Sync\\_OtherDroneFlights\\_Liam\\DJI_Liam_Quesnel2021\\Kml")
print(files)
files = list.files("C:\\Sync\\_OtherDroneFlights\\_Liam\\DJI_Liam_Quesnel2021\\Kml", full.names=T)
files
test = st_read(files[1])
test = sf::read_sf(files[1])
st_drivers()
print(files[1])
library(sf)
files = list.files("C:\\Sync\\_OtherDroneFlights\\_Liam\\DJI_Liam_Quesnel2021\\Kml\\", full.names=T)
test = sf::read_sf(files[1])
library(sf)
files = list.files("C:\\Sync\\_OtherDroneFlights\\_Liam\\DJI_Liam_Quesnel2021\\Kml\\", full.names=T)
test = sf::read_sf(files[2])
library(sf)
files = list.files("C:\\Sync\\_OtherDroneFlights\\_Liam\\DJI_Liam_Quesnel2021\\Kml\\", full.names=T)
test = sf::read_sf(files[3])
library(sf)
files = list.files("C:\\Sync\\_OtherDroneFlights\\_Liam\\DJI_Liam_Quesnel2021\\Kml\\", full.names=T)
test = sf::read_sf(files[5])
library(sf)
library(devtools)
install_github("edzer/sfr")
install.packages("devtools")
test = sf::read_sf(files[5])
library(sf)
test = sf::read_sf(files[5])
st_drivers()[row.names(st_drivers()) == "KML",]
st_drivers()[row.names(st_drivers()) == "KMZ",]
test = sf::read_sf(files[5])
library(rgdal)
install.packages("rgdal")
files[1]
library(rgdal)
x = readOGR(files[1], "day_2_4900_blocks")
files = list.files("C:\\Sync\\_OtherDroneFlights\\_Liam\\DJI_Liam_Quesnel2021\\Kml\\", full.names=T, pattern="*.kml")
test = sf::read_sf(files[1])
for (f in files){
poly = sf::read_sf(f)
}
for (f in files){
poly = sf::read_sf(f)
plot(poly)
}
library(sf)
library(devtools)
install_github("edzer/sfr")
library(sf)
files = list.files("C:\\Sync\\_OtherDroneFlights\\_Liam\\DJI_Liam_Quesnel2021\\Kml\\", full.names=T, pattern="*.kml")
for (f in files){
poly = sf::read_sf(f)
poly2 = st_simplify(poly)
}
test = sf::read_sf(files[1])
test2 = st_cast(test, simplify=True)
plot(text2)
plot(test2)
plot(test)
test
test2
for (f in files){
poly = sf::read_sf(f)
filen = tools::file_path_sans_ext(f)
sf::write_sf(poly, paste0("C:\\Sync\\_OtherDroneFlights\\_Liam\\DJI_Liam_Quesnel2021\\Kml\\",filen,".shp"))
}
for (f in files){
poly = sf::read_sf(f)
filen = tools::file_path_sans_ext(f)
sf::write_sf(poly, paste0("C:\\Sync\\_OtherDroneFlights\\_Liam\\DJI_Liam_Quesnel2021\\Shp\\",filen,".shp"))
}
for (f in files){
poly = sf::read_sf(f)
poly2 = rbind(poly)
filen = tools::file_path_sans_ext(f)
sf::write_sf(poly2, paste0("C:\\Sync\\_OtherDroneFlights\\_Liam\\DJI_Liam_Quesnel2021\\Shp\\",filen,".shp"))
}
files
read_sf(files[0])
read_sf(files[1])
install.packages("lidR")
install.packages("vitae")
# Chunk 1: setup
knitr::opts_chunk$set(echo = FALSE,
warning = FALSE,
message = FALSE)
pkgs <- c('vitae' ,'here' ,'tinytex' ,'tibble' ,'glue' ,'rmarkdown' ,'dplyr', 'readr' ,'yaml')
xfun::pkg_attach2(pkgs)
packages <- c('vitae'     # The CV's LaTeX Template
,'tibble'    # Data sctructure for tribbles
,'magrittr'  # The Pipe %>%
,'here'      # Relative Filepaths
,'readr'     # Data Loading
,'tidyverse' # Needed for bind_rows and whatever
,'scholar'   # Updating publications from google scholar
,'kableExtra'# Adding technicalskills table
)
library(magrittr)
# Install packages not yet installed
installed_packages <- packages %in% rownames(installed.packages())
if (any(installed_packages == FALSE)) {
install.packages(packages[!installed_packages])
}
# Packages loading
lapply(packages, library, character.only = TRUE) %>%
invisible()
source(file = here("r","data.r"))
# Chunk 2: Experience
experience %>%
detailed_entries(
with = title,
what = unit,
why = detail,
when = glue::glue("{startMonth} {startYear} - {endMonth} {endYear}",.na = ""),
where = where, .protect = F
)
# Chunk 3: EDUCATION
education %>%
detailed_entries(
with = title,
what = unit,
why = detail,
when = glue::glue("{startMonth} {startYear} - {endMonth} {endYear}",.na = ""),
where = where, .protect = F
)
# Chunk 4: AWARDS
awards %>%
detailed_entries(
with = area,
what = accomplishment,
why = detail,
when = year,
where = where
)
# Chunk 5: JOUNRALARTICLES
bib <- bibliography_entries("publications.bib") %>%
arrange(desc(issued))
bib$`container-title` <- str_to_sentence(bib$`container-title`, locale = "en")
bib
# Chunk 6: SOFTWARE
bib <- bibliography_entries("software.bib")
bib
# Chunk 7: PRESENTATIONS
p <- presentations  %>%
filter(detail == "Conference") %>%
mutate(detail = NA)
p %>%
detailed_entries(
with = title,
what = unit,
why = detail,
when = glue::glue("{startMonth} {startYear}",.na = ""),
where = where, .protect = F
)
# Chunk 8: TEACHING
p <- presentations %>%
filter(detail == "Workshop") %>%
mutate(detail = NA)
p %>%
detailed_entries(
with = title,
what = unit,
why = detail,
when = glue::glue("{startMonth} {startYear}",.na = ""),
where = where, .protect = F
)
install.packages(packages[!installed_packages])
setwd(C:\Sync\CV\CV-Quarto)
setwd(C:/Sync/CV/CV-Quarto)
setwd(C:/Sync/CV/CV-Quarto)
setwd(C:\Sync\CV\CV-Quarto)
setwd(C:\Sync/CV/CV-Quarto)
setwd(C:/Sync/CV/CV-Quarto)
setwd(C://Sync//CV//CV-Quarto)
setwd(C:\\Sync\\CV\\CV-Quarto\\)
setwd(C://Sync//CV//CV-Quarto//)
setwd("C:S//ync//CV//CV-Quarto-Copy//")
setwd("C://ync//CV//CV-Quarto-Copy//")
setwd("C://CV//CV-Quarto-Copy//")
setwd("C://CV//CV-Quarto-Copy//")
setwd("C:/Sync/CV/CV-Quarto-Copy/")
